generator client {
  provider      = "prisma-client-js"
  previewFeatures = ["filterJson"]
  binaryTargets = ["linux-musl", "native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Secrets {
  id        String   @id @default(cuid())
  password  String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [id], references: [id])
}

model File {
  url         String     @id
  meta        Json       @default("{}")
  fileType    FileType?
  userId      String?
  productId   String?
  reviewId    String?
  categoryId  String?
  tagId       String?
  storyId     String?
  orderId     String?
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category? @relation(fields: [categoryId], references: [label])
  story       Story?    @relation(fields: [storyId], references: [id])
  product     Product?  @relation(fields: [productId], references: [id])
  review      Review?   @relation(fields: [reviewId], references: [id])
  tag         Tag?      @relation(fields: [tagId], references: [label])
  user        User?     @relation(fields: [userId], references: [id])
  order       Order?    @relation(fields: [orderId], references: [id])
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  emailVerified Boolean        @default(false)
  name          String
  avatar        String?
  dateOfBirth   DateTime?
  phone         String?        @unique
  bio           String?
  oauthId       String?        @unique
  oauthProvider OAuthProvider?
  role          Role           @default(USER)
  active        Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  addresses     Address[]
  cart          Cart?
  files         File[]
  orders        Order[]
  reviews       Review[]
  stories       Story[]
  secrets       Secrets?
  transactions  Transaction[]
}

model Cart {
  id         String     @id @default(cuid())
  userId     String?    @unique
  checkedOut Boolean    @default(false)
  active     Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  user       User?      @relation(fields: [userId], references: [id])
  items      CartItem[]
  order      Order[]
}

model CartItem {
  productId String
  cartId    String
  quantity  Int
  size      String?
  color     String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([productId, cartId])
}

model Address {
  id        String   @id @default(cuid())
  fullname  String
  address   String
  region    String?
  nearby    String?
  zipcode   String
  city      String
  state     String
  country   String
  phone     String
  email     String
  userId    String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  orders    Order[]
}

model Tag {
  label       String    @id
  value       String?
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  styles      String[]
  description String?
  images      File[]
  products    Product[]
}

model Category {
  label       String    @id
  value       String?
  styles      String[]
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  description String?
  images      File[]
  products    Product[]
}

model Offer {
  label       String   @unique
  value       String?
  description String?
  type        String   @default("promo")
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  orders      Order[]
}

model Review {
  id          String   @id @default(cuid())
  rating      Int      @default(0)
  title       String
  description String
  productId   String?
  published   Boolean  @default(false)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  product     Product? @relation(fields: [productId], references: [id])
  user        User?    @relation(fields: [userId], references: [id])
  images      File[]
}

model Company {
  name    String    @id
  products Product[]
}

model Product {
  id           String     @id @default(cuid())
  slug         String?    @unique @default(cuid())
  title        String
  description  String
  company      Company    @relation(fields: [brand], references: [name])
  brand        String     @default("Generic")
  colors       String[]
  sizes        String[]
  styles       String[]
  rating       Int
  dimensions   String[]
  details      Json
  faqs         Json       @default("[]")
  published    Boolean    @default(false)
  mrp          Float
  price        Float
  tax          Float
  taxCode      String?
  inventoryId  String     @unique
  active       Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  ratingsCount Int        @default(0)
  inventory    Inventory  @relation(fields: [inventoryId], references: [id])
  cart         CartItem[]
  images       File[]
  reviews      Review[]
  categories   Category[]
  tags         Tag[]
}

model Inventory {
  id            String   @id @default(cuid())
  stockQuantity Int      @default(0)
  sku           String   @unique
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  product       Product?
}

model Order {
  id           String       @id @default(cuid())
  subTotal     Float        @default(0)
  itemDiscount Float        @default(0)
  tax          Float        @default(0)
  shipping     Float        @default(0)
  total        Float        @default(0)
  discount     Float        @default(0)
  grandTotal   Float
  promo        String?
  userId       String
  addressId    String
  cartId       String
  status       OrderStatus  @default(PENDING)
  active       Boolean      @default(true)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  address      Address      @relation(fields: [addressId], references: [id])
  cart         Cart         @relation(fields: [cartId], references: [id])
  offer        Offer?       @relation(fields: [promo], references: [label])
  user         User         @relation(fields: [userId], references: [id])
  transaction  Transaction?
  documents    File[]
}

model Transaction {
  id               String            @id @default(cuid())
  userId           String
  notes            Json?
  amount           Float
  currency         String            @default("INR")
  receipt          String?
  paymentId        String?
  paymentOrderId   String?
  paymentSignature String?
  reference        String?
  verified         Boolean           @default(false)
  type             TransactionType
  status           TransactionStatus
  active           Boolean           @default(true)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  order            Order             @relation(fields: [id], references: [id])
  user             User              @relation(fields: [userId], references: [id])
}

model Story {
  id           String     @id @default(cuid())
  slug         String?     @unique
  title        String
  subtitle     String?
  styles       String[]

  description  String?

  body         Json       @default("{}")
  published    Boolean    @default(false)

  userId       String?

  files         File[]

  tags         String[]

  user         User?              @relation(fields: [userId], references: [id])

  active       Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Form {
  id           String     @id @default(cuid())
  data         Json       @default("{}")

  active       Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  formResponses       FormResponse[]
}

model FormResponse {
  id           String     @id @default(cuid())
  data         Json       @default("{}")
  formId       String 
  active       Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  form         Form?  @relation(fields: [formId], references: [id])
}

enum OAuthProvider {
  GOOGLE
  FACEBOOK
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAYMENT_FAILED
  UNSHIPPED
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

enum TransactionStatus {
  NEW
  CANCELLED
  FAILED
  PENDING
  DECLINED
  REJECTED
  SUCCESS
}

enum TransactionType {
  RAZORPAY
}

enum FileType {
  images
  documents
}
